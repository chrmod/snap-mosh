language: cpp

services:
  - docker

# cross toolchain (used as a base for multiarch cross-compilation configurations below)
include: &toolchain_linux_cross
  dist: trusty
  sudo: required # for dpkg --add-architecture locking

# armhf toolchain
include: &toolchain_linux_armhf
  <<: *toolchain_linux_cross
  env:
    - LABEL=armhf_linux
    - CROSS_TOOLCHAIN=true
    - ARCH=armhf
    - NPM_ARCH=arm
    - GNU_TRIPLET=arm-linux-gnueabihf
    - GNU_MULTILIB_TRIPLET=arm-linux-gnueabihf
    - GPP_COMPILER=arm-linux-gnueabihf-g++
    - GCC_COMPILER=arm-linux-gnueabihf-gcc

matrix:
  include:
  - os: linux
    <<: *toolchain_linux_armhf

script:
  - docker build -t chrmod/snap-mosh .
  - docker run -v $(pwd):$(pwd) -w $(pwd) -t chrmod/snap-mosh sh -c
    "snapcraft --target-arch=${ARCH}"

after_success:
  - openssl aes-256-cbc -K $encrypted_eb13c6a37015_key -iv $encrypted_eb13c6a37015_iv
    -in .snapcraft/travis_snapcraft.cfg
    -out .snapcraft/snapcraft.cfg -d

deploy:
  provider: script
  script: docker run -v $(pwd):$(pwd) -t ubuntu:xenial sh -c "apt update -qq && apt
    install snapcraft -y && cd $(pwd) && snapcraft && snapcraft push *.snap --release
    edge"
  skip_cleanup: true
  on:
    branch: master

notifications:
  email: false
